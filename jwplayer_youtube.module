<?php

// Include the field element.
module_load_include('ytapi.inc', 'jwplayer_youtube');

/**
 * Implements hook_menu().
 */
function jwplayer_youtube_menu() {
    $items = array();

    $items['admin/config/media/jwplayer_youtube'] = array(
      'title' => 'Yotube Settings',
      'description' => 'Adjust YouTube Account settings.',
      'file' => 'jwplayer_youtube.admin.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('jwplayer_youtube_account_settings_form'),
      'access arguments' => array('administer site configuration'),
    );

    $items['jwplayer_youtube/oauth2callback'] = array(
      'title' => 'YouTube callback',
      'page callback' => '_jwplayer_youtube_ytcallback',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
 * Get country.
 */
function _jwplayer_youtube_get_country() {
    $country = variable_get('jwplayer_youtube_app_country', NULL);
    if (empty($country)) {
        $sd_country = variable_get('site_default_country', 'US');
        $country = empty($sd_country) ? 'US' : $sd_country;
    }
    return $country;
}

/**
 * Google redirect here when user allowed application.
 *
 * @see jwplayer_youtube_menu()
 */
function _jwplayer_youtube_ytcallback() {

    $params = drupal_get_query_parameters();

    if (!empty($params['code'])) {
        module_load_include('ytapi.inc', 'jwplayer_youtube');
        $ytapi = new jwplayerYTApi();
        $ytapi->getTokenFromCode($params['code']);
        variable_set('googleapi_auth', TRUE);
    }

    drupal_goto('admin/config/media/jwplayer_youtube');
}

/**
 * Retreive video keywords for DoubleClick.
 *
 * @param type $media_key
 * @return type
 */
function jwplayer_youtube_get_video_data($media_key) {
    $params = array(
      'q' => 'media_key:' . $media_key,
      'wt' => 'json',
      'indent' => 'true',
    );

    $query = http_build_query($params);
    $feed = json_decode(file_get_contents("http://search01.fccinteractive.com/solr/jwplayer_data_shard1_replica1/select?{$query}"));
    $video = $feed->response->docs[0];

    return $video;
}

/**
 *
 * @param type $media_key
 */
function jwplayer_youtube_upload_video_to_youtube($media_key = NULL) {
    $video = jwplayer_youtube_get_video_data($media_key);
    $ytapi = new jwplayerYTApi();
    $ytapi->uploadVideo($video);
}

/**
 *
 * @param type $media_key
 */
function _jwplayer_youtube_upload_videos_bulk($media) {
    $ytapi = new jwplayerYTApi();
    foreach ($media as $video) {
        $ytapi->uploadVideo($video);
    }
}

/**
 *
 * @return type
 */
function jwplayer_youtube_get_video_data_bulk($start, $rows) {
    $end_date = strtotime('-3 month');
    $params = array(
      'q' => "date:[* TO {$end_date}]",
      'start' => $start,
      'rows' => $rows,
      'wt' => 'json',
      'indent' => 'true',
      'sort' => 'date asc'
    );

    $query = http_build_query($params);
    $feed = json_decode(file_get_contents("http://search01.fccinteractive.com/solr/jwplayer_data_shard1_replica1/select?{$query}"));
    $video = $feed->response->docs;
    return $video;
}

/**
 *
 * @return type
 */
function jwplayer_youtube_get_video_data_cron_tab() {
    $start_date = strtotime('-3 month -1 day');
    $end_date = strtotime('-3 month');
    $params = array(
      'q' => "date:[{$start_date} TO {$end_date}]",
      'start' => 0,
      'rows' => jwplayer_get_video_total(),
      'wt' => 'json',
      'indent' => 'true',
      'sort' => 'date asc'
    );

    $query = http_build_query($params);
    $feed = json_decode(file_get_contents("http://search01.fccinteractive.com/solr/jwplayer_data_shard1_replica1/select?{$query}"));
    $video = $feed->response->docs[0];
    return $video;
}
